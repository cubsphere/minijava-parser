// Generated from minijava.g4 by ANTLR 4.4

	package minijava.generated;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

public class minijavaLexer extends Lexer {
	public static final int
		T__1=1, T__0=2, LBRACKET=3, RBRACKET=4, LBRACE=5, RBRACE=6, LCURLY=7, 
		RCURLY=8, SEMICOLON=9, COLON=10, DOT=11, CLASS=12, EXTENDS=13, PUBLIC=14, 
		STATIC=15, VOID=16, MAIN=17, INT=18, BOOLEAN=19, WHILE=20, IF=21, ELSE=22, 
		PRINT=23, NEW=24, THIS=25, RETURN=26, EQUAL_ASSIGN=27, AND=28, LESSTHAN=29, 
		PLUS=30, MINUS=31, TIMES=32, NOT=33, TRUE=34, FALSE=35, INTEGER_LITERAL=36, 
		IDENTIFIER=37, COMMENT=38, WS=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''"
	};
	public static final String[] ruleNames = {
		"T__1", "T__0", "LBRACKET", "RBRACKET", "LBRACE", "RBRACE", "LCURLY", 
		"RCURLY", "SEMICOLON", "COLON", "DOT", "CLASS", "EXTENDS", "PUBLIC", "STATIC", 
		"VOID", "MAIN", "INT", "BOOLEAN", "WHILE", "IF", "ELSE", "PRINT", "NEW", 
		"THIS", "RETURN", "EQUAL_ASSIGN", "AND", "LESSTHAN", "PLUS", "MINUS", 
		"TIMES", "NOT", "TRUE", "FALSE", "INTEGER_LITERAL", "IDENTIFIER", "COMMENT", 
		"SINGLELINECOMMENT", "MULTILINECOMMENT", "WS"
	};


	public minijavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN);
	}

	@Override
	public String getGrammarFileName() { return "minijava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	public static final String _serializedATN =
		"\3\uaf6f\u8320\u479d\ub75c\u4880\u1605\u191c\uab37\2)\u011d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\3\2\3\2"+
		"\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3"+
		"\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21"+
		"\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35"+
		"\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$"+
		"\3$\3$\3$\3%\6%\u00f4\n%\r%\16%\u00f5\3&\3&\7&\u00fa\n&\f&\16&\u00fd\13"+
		"&\3\'\3\'\5\'\u0101\n\'\3\'\3\'\3(\3(\3(\3(\7(\u0109\n(\f(\16(\u010c\13"+
		"(\3)\3)\3)\3)\7)\u0112\n)\f)\16)\u0115\13)\3)\3)\3)\3*\3*\3*\3*\3\u0113"+
		"\2\2+\3\2\3\5\2\4\7\2\5\t\2\6\13\2\7\r\2\b\17\2\t\21\2\n\23\2\13\25\2"+
		"\f\27\2\r\31\2\16\33\2\17\35\2\20\37\2\21!\2\22#\2\23%\2\24\'\2\25)\2"+
		"\26+\2\27-\2\30/\2\31\61\2\32\63\2\33\65\2\34\67\2\359\2\36;\2\37=\2 "+
		"?\2!A\2\"C\2#E\2$G\2%I\2&K\2\'M\2(O\2\2Q\2\2S\2)\3\2\7\3\2\62;\5\2C\\"+
		"aac|\6\2\62;C\\aac|\3\2\f\f\5\2\13\f\17\17\"\"\u011f\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2S\3\2\2\2\3U\3\2\2\2\5\\\3\2\2\2\7c\3\2\2\2\te\3\2"+
		"\2\2\13g\3\2\2\2\ri\3\2\2\2\17k\3\2\2\2\21m\3\2\2\2\23o\3\2\2\2\25q\3"+
		"\2\2\2\27s\3\2\2\2\31u\3\2\2\2\33{\3\2\2\2\35\u0083\3\2\2\2\37\u008a\3"+
		"\2\2\2!\u0091\3\2\2\2#\u0096\3\2\2\2%\u009b\3\2\2\2\'\u009f\3\2\2\2)\u00a7"+
		"\3\2\2\2+\u00ad\3\2\2\2-\u00b0\3\2\2\2/\u00b5\3\2\2\2\61\u00c8\3\2\2\2"+
		"\63\u00cc\3\2\2\2\65\u00d1\3\2\2\2\67\u00d8\3\2\2\29\u00da\3\2\2\2;\u00dd"+
		"\3\2\2\2=\u00df\3\2\2\2?\u00e1\3\2\2\2A\u00e3\3\2\2\2C\u00e5\3\2\2\2E"+
		"\u00e7\3\2\2\2G\u00ec\3\2\2\2I\u00f3\3\2\2\2K\u00f7\3\2\2\2M\u0100\3\2"+
		"\2\2O\u0104\3\2\2\2Q\u010d\3\2\2\2S\u0119\3\2\2\2UV\7n\2\2VW\7g\2\2WX"+
		"\7p\2\2XY\7i\2\2YZ\7v\2\2Z[\7j\2\2[\4\3\2\2\2\\]\7U\2\2]^\7v\2\2^_\7t"+
		"\2\2_`\7k\2\2`a\7p\2\2ab\7i\2\2b\6\3\2\2\2cd\7*\2\2d\b\3\2\2\2ef\7+\2"+
		"\2f\n\3\2\2\2gh\7]\2\2h\f\3\2\2\2ij\7_\2\2j\16\3\2\2\2kl\7}\2\2l\20\3"+
		"\2\2\2mn\7\177\2\2n\22\3\2\2\2op\7=\2\2p\24\3\2\2\2qr\7.\2\2r\26\3\2\2"+
		"\2st\7\60\2\2t\30\3\2\2\2uv\7e\2\2vw\7n\2\2wx\7c\2\2xy\7u\2\2yz\7u\2\2"+
		"z\32\3\2\2\2{|\7g\2\2|}\7z\2\2}~\7v\2\2~\177\7g\2\2\177\u0080\7p\2\2\u0080"+
		"\u0081\7f\2\2\u0081\u0082\7u\2\2\u0082\34\3\2\2\2\u0083\u0084\7r\2\2\u0084"+
		"\u0085\7w\2\2\u0085\u0086\7d\2\2\u0086\u0087\7n\2\2\u0087\u0088\7k\2\2"+
		"\u0088\u0089\7e\2\2\u0089\36\3\2\2\2\u008a\u008b\7u\2\2\u008b\u008c\7"+
		"v\2\2\u008c\u008d\7c\2\2\u008d\u008e\7v\2\2\u008e\u008f\7k\2\2\u008f\u0090"+
		"\7e\2\2\u0090 \3\2\2\2\u0091\u0092\7x\2\2\u0092\u0093\7q\2\2\u0093\u0094"+
		"\7k\2\2\u0094\u0095\7f\2\2\u0095\"\3\2\2\2\u0096\u0097\7o\2\2\u0097\u0098"+
		"\7c\2\2\u0098\u0099\7k\2\2\u0099\u009a\7p\2\2\u009a$\3\2\2\2\u009b\u009c"+
		"\7k\2\2\u009c\u009d\7p\2\2\u009d\u009e\7v\2\2\u009e&\3\2\2\2\u009f\u00a0"+
		"\7d\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7q\2\2\u00a2\u00a3\7n\2\2\u00a3"+
		"\u00a4\7g\2\2\u00a4\u00a5\7c\2\2\u00a5\u00a6\7p\2\2\u00a6(\3\2\2\2\u00a7"+
		"\u00a8\7y\2\2\u00a8\u00a9\7j\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab\7n\2\2"+
		"\u00ab\u00ac\7g\2\2\u00ac*\3\2\2\2\u00ad\u00ae\7k\2\2\u00ae\u00af\7h\2"+
		"\2\u00af,\3\2\2\2\u00b0\u00b1\7g\2\2\u00b1\u00b2\7n\2\2\u00b2\u00b3\7"+
		"u\2\2\u00b3\u00b4\7g\2\2\u00b4.\3\2\2\2\u00b5\u00b6\7U\2\2\u00b6\u00b7"+
		"\7{\2\2\u00b7\u00b8\7u\2\2\u00b8\u00b9\7v\2\2\u00b9\u00ba\7g\2\2\u00ba"+
		"\u00bb\7o\2\2\u00bb\u00bc\7\60\2\2\u00bc\u00bd\7q\2\2\u00bd\u00be\7w\2"+
		"\2\u00be\u00bf\7v\2\2\u00bf\u00c0\7\60\2\2\u00c0\u00c1\7r\2\2\u00c1\u00c2"+
		"\7t\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5\7v\2\2\u00c5"+
		"\u00c6\7n\2\2\u00c6\u00c7\7p\2\2\u00c7\60\3\2\2\2\u00c8\u00c9\7p\2\2\u00c9"+
		"\u00ca\7g\2\2\u00ca\u00cb\7y\2\2\u00cb\62\3\2\2\2\u00cc\u00cd\7v\2\2\u00cd"+
		"\u00ce\7j\2\2\u00ce\u00cf\7k\2\2\u00cf\u00d0\7u\2\2\u00d0\64\3\2\2\2\u00d1"+
		"\u00d2\7t\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7w\2\2"+
		"\u00d5\u00d6\7t\2\2\u00d6\u00d7\7p\2\2\u00d7\66\3\2\2\2\u00d8\u00d9\7"+
		"?\2\2\u00d98\3\2\2\2\u00da\u00db\7(\2\2\u00db\u00dc\7(\2\2\u00dc:\3\2"+
		"\2\2\u00dd\u00de\7>\2\2\u00de<\3\2\2\2\u00df\u00e0\7-\2\2\u00e0>\3\2\2"+
		"\2\u00e1\u00e2\7/\2\2\u00e2@\3\2\2\2\u00e3\u00e4\7,\2\2\u00e4B\3\2\2\2"+
		"\u00e5\u00e6\7#\2\2\u00e6D\3\2\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7t\2"+
		"\2\u00e9\u00ea\7w\2\2\u00ea\u00eb\7g\2\2\u00ebF\3\2\2\2\u00ec\u00ed\7"+
		"h\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0\7u\2\2\u00f0\u00f1"+
		"\7g\2\2\u00f1H\3\2\2\2\u00f2\u00f4\t\2\2\2\u00f3\u00f2\3\2\2\2\u00f4\u00f5"+
		"\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6J\3\2\2\2\u00f7"+
		"\u00fb\t\3\2\2\u00f8\u00fa\t\4\2\2\u00f9\u00f8\3\2\2\2\u00fa\u00fd\3\2"+
		"\2\2\u00fb\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fcL\3\2\2\2\u00fd\u00fb"+
		"\3\2\2\2\u00fe\u0101\5O(\2\u00ff\u0101\5Q)\2\u0100\u00fe\3\2\2\2\u0100"+
		"\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0103\b\'\2\2\u0103N\3\2\2\2"+
		"\u0104\u0105\7\61\2\2\u0105\u0106\7\61\2\2\u0106\u010a\3\2\2\2\u0107\u0109"+
		"\n\5\2\2\u0108\u0107\3\2\2\2\u0109\u010c\3\2\2\2\u010a\u0108\3\2\2\2\u010a"+
		"\u010b\3\2\2\2\u010bP\3\2\2\2\u010c\u010a\3\2\2\2\u010d\u010e\7\61\2\2"+
		"\u010e\u010f\7,\2\2\u010f\u0113\3\2\2\2\u0110\u0112\13\2\2\2\u0111\u0110"+
		"\3\2\2\2\u0112\u0115\3\2\2\2\u0113\u0114\3\2\2\2\u0113\u0111\3\2\2\2\u0114"+
		"\u0116\3\2\2\2\u0115\u0113\3\2\2\2\u0116\u0117\7,\2\2\u0117\u0118\7\61"+
		"\2\2\u0118R\3\2\2\2\u0119\u011a\t\6\2\2\u011a\u011b\3\2\2\2\u011b\u011c"+
		"\b*\2\2\u011cT\3\2\2\2\b\2\u00f5\u00fb\u0100\u010a\u0113\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
	}
}